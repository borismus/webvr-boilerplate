{
  "name": "webvr-polyfill",
  "version": "0.9.6",
  "homepage": "https://github.com/borismus/webvr-polyfill",
  "authors": [
    "Boris Smus <boris@smus.com>",
    "Brandon Jones <tojiro@gmail.com>"
  ],
  "description": "Use WebVR today, on mobile or desktop, without requiring a special browser build.",
  "dependencies": {
    "es6-promise": "^3.0.2",
    "object-assign": "^4.0.1"
  },
  "devDependencies": {
    "browserify": "latest",
    "derequire": "latest",
    "watchify": "latest"
  },
  "main": "build/webvr-polyfill.js",
  "keywords": [
    "vr",
    "webvr"
  ],
  "license": "Apache-2.0",
  "scripts": {
    "build": "browserify src/main.js | derequire > build/webvr-polyfill.js",
    "watch": "watchify src/main.js -v -d -o 'derequire > build/webvr-polyfill.js'",
    "copy": "cp build/webvr-polyfill.js ../webvr-boilerplate/node_modules/webvr-polyfill/build/webvr-polyfill.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/borismus/webvr-polyfill"
  },
  "bugs": {
    "url": "https://github.com/borismus/webvr-polyfill/issues"
  },
  "readme": "# WebVR Polyfill\n\nA JavaScript implementation of the [WebVR spec][spec]. This project lets you use\nWebVR today, without requiring a [special][moz] [browser][cr] build. It also\nlets you view the same content without requiring a virtual reality viewer.\n\nTake a look at [basic WebVR samples][samples] that use this polyfill.\n\n[moz]: http://mozvr.com/\n[cr]: https://drive.google.com/folderview?id=0BzudLt22BqGRbW9WTHMtOWMzNjQ\n[samples]: https://toji.github.io/webvr-samples/\n[spec]: https://mozvr.github.io/webvr-spec/\n\n## Implementation\n\nThe polyfill decides which VRDisplays to provide, depending on the configuration\nof your browser. Mobile devices provide the `CardboardVRDisplay`. Desktop devices\nuse the `MouseKeyboardVRDisplay`.\n\n`CardboardVRDisplay` uses DeviceMotionEvents to implement a complementary\nfilter which does [sensor fusion and pose prediction][fusion] to provide\norientation tracking. It can also render in stereo mode, and includes mesh-based\nlens distortion. This display also includes user interface elements in VR mode\nto make the VR experience more intuitive, including:\n\n- A gear icon to select your VR viewer.\n- A back button to exit VR mode.\n- An interstitial which only appears in portrait orientation, requesting you switch\n  into landscape orientation (if [orientation lock][ol] is not available).\n\n`MouseKeyboardVRDisplay` uses mouse events to allow you to do the equivalent of\nmouselook. It also uses keyboard arrows keys to look around the scene\nwith the keyboard.\n\n[fusion]: http://smus.com/sensor-fusion-prediction-webvr/\n[ol]: https://www.w3.org/TR/screen-orientation/\n\n\n## Configuration\n\nThe polyfill can be configured and debugged with various options. The following\nare supported:\n\n```javascript\nWebVRConfig = {\n  // Forces availability of VR mode, even for non-mobile devices.\n  FORCE_ENABLE_VR: true, // Default: false.\n\n  // Complementary filter coefficient. 0 for accelerometer, 1 for gyro.\n  K_FILTER: 0.98, // Default: 0.98.\n\n  // How far into the future to predict during fast motion (in seconds).\n  PREDICTION_TIME_S: 0.040, // Default: 0.040.\n\n  // Flag to disable touch panner. In case you have your own touch controls.\n  TOUCH_PANNER_DISABLED: true, // Default: false.\n\n  // Enable yaw panning only, disabling roll and pitch. This can be useful\n  // for panoramas with nothing interesting above or below.\n  YAW_ONLY: true, // Default: false.\n\n  // To disable keyboard and mouse controls, if you want to use your own\n  // implementation.\n  MOUSE_KEYBOARD_CONTROLS_DISABLED: true, // Default: false.\n\n  // Prevent the polyfill from initializing immediately. Requires the app\n  // to call InitializeWebVRPolyfill() before it can be used.\n  DEFER_INITIALIZATION: true, // Default: false.\n\n  // Enable the deprecated version of the API (navigator.getVRDevices).\n  ENABLE_DEPRECATED_API: true, // Default: false.\n\n  // Scales the recommended buffer size reported by WebVR, which can improve\n  // performance.\n  BUFFER_SCALE: 0.5, // Default: 1.0.\n\n  // Allow VRDisplay.submitFrame to change gl bindings, which is more\n  // efficient if the application code will re-bind its resources on the\n  // next frame anyway. This has been seen to cause rendering glitches with\n  // THREE.js.\n  // Dirty bindings include: gl.FRAMEBUFFER_BINDING, gl.CURRENT_PROGRAM,\n  // gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING,\n  // and gl.TEXTURE_BINDING_2D for texture unit 0.\n  DIRTY_SUBMIT_FRAME_BINDINGS: true // Default: false.\n}\n```\n\n## Performance\n\nPerformance is critical for VR. If you find your application is too sluggish,\nconsider tweaking some of the above parameters. In particular, reducing\n`BUFFER_SCALE` to 0.5 (from its default 1.0) will likely help a lot.\n\n## Development\n\nIf you'd like to contribute to the `webvr-poyfill` library, check out\nthe repository and install\n[Node](https://nodejs.org/en/download/package-manager/) and the dependencies:\n\n```bash\ngit clone https://github.com/borismus/webvr-polyfill\ncd webvr-polyfill\nnpm install\n```\n\n\n## License\n\nThis program is free software for both commercial and non-commercial use,\ndistributed under the [Apache 2.0 License](COPYING).\n",
  "readmeFilename": "README.md",
  "_id": "webvr-polyfill@0.9.6",
  "_from": "webvr-polyfill@0.9.6"
}
